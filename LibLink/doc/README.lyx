#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 0
\use_package mathdots 0
\use_package mathtools 1
\use_package mhchem 0
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
LibLink v0.0.2
\end_layout

\begin_layout Author
John Elliott
\end_layout

\begin_layout Abstract
LibLink is a library intended to support emulation of hardware that is used
 to communicate with peripherals or other computers.
 This version contains support for parallel ports and LocoLink.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
LibLink provides a general set of operations for emulating one or more parallel
 ports (this may be expanded in future to cover other hardware, such as
 serial ports).
 Each emulated parallel port can be mapped to:
\end_layout

\begin_layout Itemize
A disc file; 
\end_layout

\begin_layout Itemize
A pipe to another process; 
\end_layout

\begin_layout Itemize
The computer's parallel port (requires Linux 2.4 or later); 
\end_layout

\begin_layout Itemize
A U
\noun on
nix
\noun default
 domain socket.
\end_layout

\begin_layout Subsection
Unidirectional and bidirectional
\end_layout

\begin_layout Standard
LibLink only emulates unidirectional parallel ports.
 It has no bidirectional capability.
 However, the socket driver (
\begin_inset Quotes eld
\end_inset

parsocket
\begin_inset Quotes erd
\end_inset

) can emulate both ends of a unidirectional connection; so it can be used
 to write a program that emulates a printer.
 This obviously involves sending signals in both directions, but that doesn't
 make it bidirectional as the term is usually understood.
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "locolink"

\end_inset

LocoLink
\end_layout

\begin_layout Standard
LocoLink is a system by which the expansion port of an Amstrad PCW computer
 (the 
\begin_inset Quotes eld
\end_inset

slave
\begin_inset Quotes erd
\end_inset

) can be connected to the parallel port of another computer (the 
\begin_inset Quotes eld
\end_inset

master
\begin_inset Quotes erd
\end_inset

).
 The two then exchange data using four wires of the parallel cable (two
 in each direction).
\end_layout

\begin_layout Standard
Now, if the LocoLink cable and interface are replaced with a LapLink cable,
 then any computer with a parallel port can be either a 
\begin_inset Quotes eld
\end_inset

master
\begin_inset Quotes erd
\end_inset

 or a 
\begin_inset Quotes eld
\end_inset

slave
\begin_inset Quotes erd
\end_inset

.
 Because of the pinout of a LapLink cable, the 
\begin_inset Quotes eld
\end_inset

master
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

slave
\begin_inset Quotes erd
\end_inset

 ends have to set different data lines, and different control lines; the
 master uses DATA 0, DATA 1, BUSY and ACK, while the slave uses DATA 3,
 DATA 4, SELECT and ERROR.
 Thus the LocoLink functions have to distinguish whether they are acting
 in a 
\begin_inset Quotes eld
\end_inset

master
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

slave
\begin_inset Quotes erd
\end_inset

 role.
 
\end_layout

\begin_layout Section
Driver types
\end_layout

\begin_layout Subsection
Output to a file or pipeline
\end_layout

\begin_layout Standard
The simplest form of printer emulation is to send the output to a file,
 or through a pipe to another program.
 To do this, call ll_open() with the driver name of 
\begin_inset Quotes eld
\end_inset

parfile
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

parpipe
\begin_inset Quotes erd
\end_inset

.
 The filename parameter is, respectively, the filename to append to or the
 program name through which data should be piped.
\end_layout

\begin_layout Standard
The Centronics emulation for these two devices is fairly basic.
 When the STROBE signal goes from low to high (or is it high to low?) the
 current data byte is appended to the file or pipe.
\end_layout

\begin_layout Subsection
Direct parallel port access 
\end_layout

\begin_layout Standard
Direct access to the parallel port requires Linux 2.4 with a kernel that
 supports user-space parallel port device drivers (CONFIG_PPDEV).
 To use direct access, call ll_open() with the driver name of 
\begin_inset Quotes eld
\end_inset

parport
\begin_inset Quotes erd
\end_inset

.
 The filename must be for a parallel port device such as 
\begin_inset Quotes eld
\end_inset

/dev/parport0
\begin_inset Quotes erd
\end_inset

.
 If the device is a file or otherwise unsuitable, the error LL_E_NOTDEV
 will be returned.
\end_layout

\begin_layout Standard
The direct parallel port driver supports all data and control lines.
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "socketcomms"

\end_inset

Communication using sockets
\end_layout

\begin_layout Standard
LibLink supports communication with other instances of LibLink using UNIX
 domain sockets or TCP/IP sockets.
 In theory you could implement LocoLink over the Internet; but security
 considerations make this a most unwise thing to do! 
\end_layout

\begin_layout Standard
A parallel connection can be client-to-server (eg: computer to printer;
 the printer acts as a server) or peer-to-peer (eg: one computer to another).
 Sockets are always client/server, so you (or the ultimate user) have to
 decide which end of a peer-to-peer connection will be the client, and which
 the server.
\end_layout

\begin_layout Standard
To open a socket connection, call ll_open() with the driver name of "parsocket".
 The filename consists of three fields, separated by colons.
 For example:
\end_layout

\begin_layout LyX-Code
"unix:S:/tmp/mysocket" or "tcp:C:localhost:1234"
\end_layout

\begin_layout Standard
The first field ("unix") specifies that this is a UNIX domain socket.
 It could also be 
\begin_inset Quotes eld
\end_inset

tcp
\begin_inset Quotes erd
\end_inset

 for a TCP/IP socket.
\end_layout

\begin_layout Standard
The second field can either be "S" for a server, or "C" for a client.
 In server mode, a new socket is created that waits for connections; while
 in client mode, an attempt is made to connect to an existing socket.
\end_layout

\begin_layout Standard
The third field is the name of the socket to open.
 For a UNIX domain socket this is a filename; for a TCP/IP socket, it is
 of the form 
\begin_inset Quotes eld
\end_inset

hostname
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

hostname:port
\begin_inset Quotes erd
\end_inset

.
 If no port number is supplied the default value of 8256 will be used.
\end_layout

\begin_layout Standard
Opening a socket in server mode will create a new socket, while in client
 mode the system will attempt to connect to the socket the server has created.
\end_layout

\begin_layout Section
Function reference
\end_layout

\begin_layout Subsection
ll_open
\end_layout

\begin_layout LyX-Code
ll_error_t ll_open(LL_PDEV *self, const char *filename, const char *devtype);
\end_layout

\begin_layout Standard
This function opens an emulated parallel port.
 
\end_layout

\begin_layout Description
self: a pointer to an LL_PDEV variable, which will serve as a handle to
 the requested port.
\end_layout

\begin_layout Description
filename: is the name of the port to open.
 The exact meaning of this string depends on what type of port is being
 opened.
 It can be one of:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Description
\begin_inset Quotes eld
\end_inset

parfile
\begin_inset Quotes erd
\end_inset

 - Emulate a parallel port by appending to a text file.
 
\begin_inset Quotes eld
\end_inset

filename
\begin_inset Quotes erd
\end_inset

 is the name of the file to which the data will be appended.
\end_layout

\begin_layout Description
\begin_inset Quotes eld
\end_inset

parpipe
\begin_inset Quotes erd
\end_inset

 - Data will be sent to a program through a U
\noun on
nix
\noun default
 pipeline.
 
\begin_inset Quotes eld
\end_inset

filename
\begin_inset Quotes erd
\end_inset

 is the name of the program that will process the output.
 For example, if the filename is 
\begin_inset Quotes eld
\end_inset

/usr/bin/lpr
\begin_inset Quotes erd
\end_inset

, output will be sent to the default printer queue.
\end_layout

\begin_layout Description
\begin_inset Quotes eld
\end_inset

parport
\begin_inset Quotes erd
\end_inset

 - On Linux 2.4, opens the specified parallel port device for raw access.
 
\begin_inset Quotes eld
\end_inset

filename
\begin_inset Quotes erd
\end_inset

 must be 
\begin_inset Quotes eld
\end_inset

/dev/parport0
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

/dev/parport1
\begin_inset Quotes erd
\end_inset

, etc.
\end_layout

\begin_layout Description
\begin_inset Quotes eld
\end_inset

parsocket
\begin_inset Quotes erd
\end_inset

 - Emulate a parallel port using 
\noun on
Unix 
\noun default
domain sockets or TCP/IP sockets.
 For the full syntax of the filename to use, see section 
\begin_inset CommandInset ref
LatexCommand ref
reference "socketcomms"

\end_inset

.
\end_layout

\end_deeper
\begin_layout Subsection
ll_close
\end_layout

\begin_layout LyX-Code
ll_error_t ll_close(LL_PDEV *self);
\end_layout

\begin_layout Standard
Closes and releases a parallel port.
 
\end_layout

\begin_layout Description
self: must point to an opened LibLink handle, which will be set to NULL
 once it has been closed.
\end_layout

\begin_layout Subsection
ll_flush
\end_layout

\begin_layout LyX-Code
ll_error_t ll_flush(LL_PDEV self);
\end_layout

\begin_layout Standard
Some of the emulated ports store bytes in an internal buffer; for example,
 the 
\begin_inset Quotes eld
\end_inset

parfile
\begin_inset Quotes erd
\end_inset

 driver uses the buffered file I/O functions of the standard I/O library.
 Call this function to ensure that all bytes have been written.
\end_layout

\begin_layout Description
self: an open LibLink connection.
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "ll_rctl_poll"

\end_inset

ll_rctl_poll, ll_rctl_wait
\end_layout

\begin_layout LyX-Code
ll_error_t ll_rctl_poll(LL_PDEV self, unsigned  *value);
\end_layout

\begin_layout LyX-Code
ll_error_t ll_rctl_wait(LL_PDEV self, unsigned  *value);
\end_layout

\begin_layout Standard
These functions both attempt to read the parallel port's control lines,
 and return their current values in 'value'.
 The difference between them is that ll_rctl_poll() always returns immediately,
 while ll_rctl_wait() waits until 
\begin_inset Quotes eld
\end_inset

something interesting
\begin_inset Quotes erd
\end_inset

 happens.
 The obvious interesting thing is that the control lines change; but the
 driver might find something else interesting; for example, the 
\begin_inset Quotes eld
\end_inset

llparsocket
\begin_inset Quotes erd
\end_inset

 driver finds it equally interesting if the data lines change.
 
\end_layout

\begin_layout Description
self: an open LibLink connection.
 
\end_layout

\begin_layout Description
value: points to an unsigned integer that will receive the state of the
 control lines.
\end_layout

\begin_layout Standard
The data signals that you can test for are:
\end_layout

\begin_layout LyX-Code
#define LL_CTL_BUSY     256     /* BUSY */
\end_layout

\begin_layout LyX-Code
#define LL_CTL_ACK      512     /* ACK */
\end_layout

\begin_layout LyX-Code
#define LL_CTL_NOPAPER 1024     /* NO PAPER */
\end_layout

\begin_layout LyX-Code
#define LL_CTL_ISELECT 2048     /* SELECT */
\end_layout

\begin_layout LyX-Code
#define LL_CTL_ERROR   4096     /* ERROR */
\end_layout

\begin_layout Standard
In addition, if you are implenting the 'printer' end of a connection, you
 may receive these signals sent by the 'computer' end:
\end_layout

\begin_layout LyX-Code
#define LL_CTL_STROBE     1     /* STROBE */
\end_layout

\begin_layout LyX-Code
#define LL_CTL_AUFEED     2     /* AUTO FEED XT */
\end_layout

\begin_layout LyX-Code
#define LL_CTL_OSELECT    4     /* SELECT */
\end_layout

\begin_layout LyX-Code
#define LL_CTL_INIT       8     /* INIT */
\end_layout

\begin_layout Subsection
ll_recv_poll, ll_recv_wait
\end_layout

\begin_layout LyX-Code
ll_error_t ll_recv_poll(LL_PDEV self, unsigned char *value);
\end_layout

\begin_layout LyX-Code
ll_error_t ll_recv_wait(LL_PDEV self, unsigned char *value);
\end_layout

\begin_layout Standard
These functions attempt to read the data lines of the parallel port.
 They are only implemented in the 
\begin_inset Quotes eld
\end_inset

parsocket
\begin_inset Quotes erd
\end_inset

 driver, for an emulated printer to read the bytes it is being sent.
 The other three drivers return LL_E_NOTIMPL.
\end_layout

\begin_layout Description
self: an open LibLink connection.
 
\end_layout

\begin_layout Description
value: points to a byte that will receive the state of the data lines.
 
\end_layout

\begin_layout Subsection
ll_sctl
\end_layout

\begin_layout LyX-Code
ll_error_t ll_sctl(LL_PDEV self, unsigned ctl);
\end_layout

\begin_layout Standard
Set the control lines.
 The bits in the 
\begin_inset Quotes eld
\end_inset

ctl
\begin_inset Quotes erd
\end_inset

 byte are defined in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "ll_rctl_poll"

\end_inset

.
\end_layout

\begin_layout Description
self: an open LibLink connection.
 
\end_layout

\begin_layout Description
ctl: The values to which the control lines are to be set.
\end_layout

\begin_layout Subsection
ll_send
\end_layout

\begin_layout LyX-Code
ll_error_t ll_send(LL_PDEV self, unsigned char data);
\end_layout

\begin_layout Standard
Set the data lines.
 
\end_layout

\begin_layout Description
self: an open LibLink connection.
 
\end_layout

\begin_layout Description
data: The values to which the data lines are to be set.
\end_layout

\begin_layout Subsection
ll_set_cable, ll_get_cable
\end_layout

\begin_layout LyX-Code
ll_error_t ll_set_cable(LL_PDEV self, LL_CABLE cable);
\end_layout

\begin_layout LyX-Code
ll_error_t ll_get_cable(LL_PDEV self, LL_CABLE *cable);
\end_layout

\begin_layout Standard
These functions only really make sense on a 
\begin_inset Quotes eld
\end_inset

parsocket
\begin_inset Quotes erd
\end_inset

 connection, although they can be called for all connection types.
 What they do is set the type of cable that connects the two ends.
 On a 
\begin_inset Quotes eld
\end_inset

parsocket
\begin_inset Quotes erd
\end_inset

 connection, setting the cable type sets it for both ends.
\end_layout

\begin_layout Standard
Parameters are:
\end_layout

\begin_layout Description
self: an open LibLink connection.
 It only makes sense to do this for the 
\begin_inset Quotes eld
\end_inset

parsocket
\begin_inset Quotes erd
\end_inset

 driver; the 
\begin_inset Quotes eld
\end_inset

parport
\begin_inset Quotes erd
\end_inset

 driver uses a real cable rather than an emulated one, and it isn't possible
 to have a meaningful LapLink conversation with a file or pipeline.
\end_layout

\begin_layout Description
cable: LL_CABLE_NORMAL for a normal cable, or LL_CABLE_LAPLINK for a LapLink
 crossover cable.
\end_layout

\begin_layout Subsection
ll_lrecv_poll, ll_lrecv_wait, ll_lsend
\end_layout

\begin_layout LyX-Code
ll_error_t ll_lrecv_poll(LL_PDEV self, int master, unsigned char *v);
\end_layout

\begin_layout LyX-Code
ll_error_t ll_lrecv_wait(LL_PDEV self, int master, unsigned char *v);
\end_layout

\begin_layout LyX-Code
ll_error_t ll_lsend(LL_PDEV self, int master, unsigned char v);
\end_layout

\begin_layout Standard
These functions are helper functions, which convert the two-bit numbers
 used in LocoLink conversations to/from the combinations of data and control
 line signals used by an actual LocoLink connection.
 The parameters for this function are:
\end_layout

\begin_layout Description
master: Pass 1 if this end of the connection is acting as the master, 0
 if it is the slave.
 See section 
\begin_inset CommandInset ref
LatexCommand ref
reference "locolink"

\end_inset

 for an explanation of LocoLink masters and slaves.
\end_layout

\begin_layout Description
v: either a pointer to the byte being received, or the byte being sent.
 
\end_layout

\begin_layout Standard
Note that these functions are only convenience functions.
 It isn't 
\emph on
necessary
\emph default
 to use them to emulate either a LocoLink master or a slave.
 
\end_layout

\begin_layout Subsection
ll_strerror
\end_layout

\begin_layout LyX-Code
const char *ll_strerror(ll_error_t error);
\end_layout

\begin_layout Standard
Convert the error code returned by any of the other LibLink functions into
 a string.
\end_layout

\begin_layout Description
error: a LibLink error code.
\end_layout

\begin_layout Description
LL_E_OK: No error (OK)
\end_layout

\begin_layout Description
LL_E_UNKNOWN: Unknown error
\end_layout

\begin_layout Description
LL_E_NOMEM: Out of memory
\end_layout

\begin_layout Description
LL_E_BADPTR: Bad pointer passed to LibLink (usually a null pointer)
\end_layout

\begin_layout Description
LL_E_SYSERR: System call failed.
 errno holds the error number.
\end_layout

\begin_layout Description
LL_E_EXIST: File already exists (it shouldn't)
\end_layout

\begin_layout Description
LL_E_NOMAGIC: File does not contain expected magic number
\end_layout

\begin_layout Description
LL_E_CLOSED: The other end of a 
\begin_inset Quotes eld
\end_inset

parsocket
\begin_inset Quotes erd
\end_inset

 link has shut down unexpectedly.
\end_layout

\begin_layout Description
LL_E_OPEN: Trying to open a link that's open already.
\end_layout

\begin_layout Description
LL_E_INUSE: Device is in use by another program.
\end_layout

\begin_layout Description
LL_E_TIMEOUT: Operation timed out.
\end_layout

\begin_layout Description
LL_E_BADPKT: Received packet has incorrect length.
\end_layout

\begin_layout Description
LL_E_CRC: Received packet has incorrect CRC.
\end_layout

\begin_layout Description
LL_E_UNEXPECT: Unexpected packet type received.
\end_layout

\begin_layout Description
LL_E_NODRIVER: Driver name passed to ll_open() not recognised.
\end_layout

\begin_layout Description
LL_E_NOTIMPL: The driver does not implement this function.
\end_layout

\begin_layout Description
LL_E_NOTDEV: The 
\begin_inset Quotes eld
\end_inset

parport
\begin_inset Quotes erd
\end_inset

 driver is has been asked to open something that isn't a parallel port.
\end_layout

\begin_layout Description
LL_E_BADNAME: Bad filename
\end_layout

\begin_layout Description
LL_E_PASSWORD: Incorrect or missing password.
\end_layout

\begin_layout Description
LL_E_AGAIN: Non-blocking I/O not completed.
\end_layout

\begin_layout Description
LL_E_SOCKERR: Error looking up an Internet hostname.
\end_layout

\end_body
\end_document
